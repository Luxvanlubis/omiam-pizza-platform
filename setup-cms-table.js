// Script pour créer la table CMS content_items
const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// Configuration Supabase
const supabaseUrl = 'http://localhost:54321';
const supabase = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU';

const supabase = createClient(supabaseUrl, supabase);

async function setupCMSTable() { console.log('🚀 Configuration de la table CMS...'); try { // Créer la table content_items const createTableSQL = ` -- Créer la table content_items CREATE TABLE IF NOT EXISTS content_items ( id UUID DEFAULT gen_random_uuid() PRIMARY , VARCHAR(255) UNIQUE NOT NULL, title VARCHAR(500) NOT NULL, content TEXT NOT NULL, type VARCHAR(50) NOT NULL CHECK (type IN ('text', 'title', 'description', 'button', 'link', 'image', 'video', 'html')), page VARCHAR(100) NOT NULL, section VARCHAR(100) NOT NULL, metadata JSONB DEFAULT '{}', is_published BOOLEAN DEFAULT false, version INTEGER DEFAULT 1, tags TEXT[] DEFAULT '{}', seo_title VARCHAR(255), seo_description TEXT, seo_words TEXT[], created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(), updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(), created_by UUID, updated_by UUID ); -- Créer les index pour améliorer les performances CREATE INDEX IF NOT EXISTS idx_content_items_ ON content_items(); CREATE INDEX IF NOT EXISTS idx_content_items_page ON content_items(page); CREATE INDEX IF NOT EXISTS idx_content_items_type ON content_items(type); CREATE INDEX IF NOT EXISTS idx_content_items_published ON content_items(is_published); CREATE INDEX IF NOT EXISTS idx_content_items_updated_at ON content_items(updated_at DESC); -- Fonction pour mettre à jour automatiquement updated_at CREATE OR REPLACE FUNCTION update_updated_at_column() RETURNS TRIGGER AS $$ BEGIN NEW.updated_at = NOW(); RETURN NEW; END; $$ language 'plpgsql'; -- Trigger pour updated_at DROP TRIGGER IF EXISTS update_content_items_updated_at ON content_items; CREATE TRIGGER update_content_items_updated_at BEFORE UPDATE ON content_items FOR EACH ROW EXECUTE FUNCTION update_updated_at_column(); -- Activer RLS (Row Level Security) ALTER TABLE content_items ENABLE ROW LEVEL SECURITY; -- Politique pour la lecture publique du contenu publié DROP POLICY IF EXISTS "Public can read published content" ON content_items; CREATE POLICY "Public can read published content" ON content_items FOR SELECT USING (is_published = true); -- Politique pour les istrateurs DROP POLICY IF EXISTS s can manage all content" ON content_items; CREATE POLICY s can manage all content" ON content_items FOR ALL USING (true); `; console.log('📝 Création de la table content_items...'); const { error: createError } = await supabase.rpc('exec_sql', { sql: createTableSQL }); if (createError) { console.error('❌ Erreur lors de la création de la table:', createError); // Essayer une approche alternative console.log('🔄 Tentative alternative...'); // Créer la table directement const { error: directError } = await supabase .from('content_items') .select('id') .limit(1); if (directError && directError.code === '42P01') { console.log('⚠️ La table n\'existe pas, création manuelle nécessaire.'); console.log('📋 Veuillez exécuter le script SQL suivant dans l\'interface Supabase:'); console.log('\n' + createTableSQL + '\n'); return false; } } // Insérer les données de console.log('📊 Insertion des données de ...'); const Data = [ { : 'hero.title', title: 'Titre Principal', content: 'Bienvenue chez OMIAM - Saveurs Authentiques du Maroc', type: 'title', page: 'homepage', section: 'hero', is_published: true, metadata: { level: 'h1', style: 'hero' } }, { : 'hero.description', title: 'Description Hero', content: 'Découvrez nos plats traditionnels marocains préparés avec amour et des ingrédients frais.', type: 'description', page: 'homepage', section: 'hero', is_published: true, metadata: { format: 'paragraph' } }, { : 'hero.cta', title: 'Bouton CTA', content: 'Commander maintenant', type: 'button', page: 'homepage', section: 'hero', is_published: true, metadata: { url: '/menu', style: 'primary' } }, { : 'about.title', title: 'Titre À propos', content: 'Notre Histoire', type: 'title', page: 'homepage', section: 'about', is_published: true, metadata: { level: 'h2' } }, { : 'about.content', title: 'Contenu À propos', content: 'OMIAM est né de la passion pour la cuisine marocaine authentique. Depuis 2020, nous servons des plats traditionnels dans une ambiance chaleureuse.', type: 'text', page: 'homepage', section: 'about', is_published: true, metadata: { format: 'paragraph' } }, { : 'contact.phone', title: 'Téléphone', content: '+33 1 23 45 67 89', type: 'text', page: 'contact', section: 'info', is_published: true, metadata: { format: 'phone', icon: 'phone' } }, { : 'contact.email', title: 'Email', content: 'contact@omiam.fr', type: 'text', page: 'contact', section: 'info', is_published: true, metadata: { format: 'email', icon: 'mail' } }, { : 'contact.address', title: 'Adresse', content: '123 Rue de la Paix, 75001 Paris', type: 'text', page: 'contact', section: 'info', is_published: true, metadata: { format: 'address', icon: 'map-pin' } }, { : 'menu.featured.title', title: 'Nos Spécialités', content: 'Découvrez nos plats signature', type: 'title', page: 'menu', section: 'featured', is_published: true, metadata: { level: 'h2', style: 'featured' } }, { : 'footer.copyright', title: 'Copyright', content: '© 2024 OMIAM. Tous droits réservés.', type: 'text', page: 'global', section: 'footer', is_published: true, metadata: { position: 'bottom' } } ]; // Insérer les données une par une pour éviter les conflits for (const item of Data) { const { error: insertError } = await supabase .from('content_items') .upsert(item, { onConflict:  }); if (insertError) { console.warn(`⚠️ Erreur lors de l'insertion de ${item.}:`, insertError.message); } else { console.log(`✅ Inséré: ${item.}`); } } console.log('🎉 Configuration CMS terminée avec succès!'); console.log('🌐 Vous pouvez maintenant accéder à l\'interface CMS sur: http://localhost:30020/); return true; } catch (error) { console.error('❌ Erreur lors de la configuration CMS:', error); return false; }
}

// Exécuter le script
setupCMSTable().then(success => { if (success) { console.log('✅ Script terminé avec succès'); } else { console.log('❌ Script terminé avec des erreurs'); } process.exit(success ? 0 : 1);
}).catch(error => { console.error('💥 Erreur fatale:', error); process.exit(1);
});