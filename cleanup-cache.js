// Script de nettoyage du cache et des fichiers temporaires
const fs = require('fs');
const path = require('path');

console.log('üßπ Nettoyage du cache et des fichiers temporaires...');
console.log('==================================================');

// Fonction pour supprimer r√©cursivement un dossier
function removeDir(dirPath) {
  if (fs.existsSync(dirPath)) {
    fs.rmSync(dirPath, { recursive: true, force: true });
    console.log(`‚úÖ Supprim√©: ${dirPath}`);
    return true;
  }
  return false;
}

// Fonction pour nettoyer un dossier (garder le dossier, supprimer le contenu)
function cleanDir(dirPath) {
  if (fs.existsSync(dirPath)) {
    const files = fs.readdirSync(dirPath);
    files.forEach(file => {
      const filePath = path.join(dirPath, file);
      fs.rmSync(filePath, { recursive: true, force: true });
    });
    console.log(`üßΩ Nettoy√©: ${dirPath}`);
    return true;
  }
  return false;
}

try {
  // 1. Nettoyer le cache Next.js
  console.log('\n1Ô∏è‚É£ Nettoyage du cache Next.js...');
  removeDir('.next');
  
  // 2. Nettoyer node_modules/.cache
  console.log('\n2Ô∏è‚É£ Nettoyage du cache node_modules...');
  removeDir('node_modules/.cache');
  
  // 3. Nettoyer les fichiers temporaires
  console.log('\n3Ô∏è‚É£ Nettoyage des fichiers temporaires...');
  const tempDirs = [
    'tmp',
    '.tmp',
    'temp',
    '.temp'
  ];
  
  tempDirs.forEach(dir => {
    if (removeDir(dir)) {
      console.log(`‚úÖ Dossier temporaire supprim√©: ${dir}`);
    }
  });
  
  // 4. Nettoyer les logs
  console.log('\n4Ô∏è‚É£ Nettoyage des logs...');
  const logFiles = [
    'npm-debug.log',
    'yarn-debug.log',
    'yarn-error.log',
    '.npm/_logs',
    'logs'
  ];
  
  logFiles.forEach(logFile => {
    if (fs.existsSync(logFile)) {
      if (fs.statSync(logFile).isDirectory()) {
        removeDir(logFile);
      } else {
        fs.unlinkSync(logFile);
        console.log(`‚úÖ Fichier log supprim√©: ${logFile}`);
      }
    }
  });
  
  console.log('\nüéâ NETTOYAGE TERMIN√â');
  console.log('==================================================');
  console.log('‚úÖ Cache Next.js nettoy√©');
  console.log('‚úÖ Fichiers temporaires supprim√©s');
  console.log('‚úÖ Logs nettoy√©s');
  console.log('\nüìã PROCHAINES √âTAPES:');
  console.log('1. Red√©marrer le serveur de d√©veloppement');
  console.log('2. Vider le cache du navigateur (Ctrl+Shift+R)');
  console.log('3. Ouvrir les outils de d√©veloppement et vider localStorage');
  
} catch (error) {
  console.error('‚ùå Erreur lors du nettoyage:', error.message);
  process.exit(1);
}