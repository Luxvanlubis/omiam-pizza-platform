"use client";

import { useState, useEffect } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Share2, Mail, MessageCircle, Star, TrendingUp, Users, Calendar, Gift, MapPin, Phone
} from "lucide-react";

interface MarketingSuiteProps { restaurantName?: string; location?: string;
}

// Composant de partage social
export function SocialShare({ restaurantName = "O'Miam", location = "Guingamp" }: MarketingSuiteProps) { const [currentUrl, setCurrentUrl] = useState(""); const [shareText, setShareText] = useState(""); useEffect(() => { setCurrentUrl(window.location.href); setShareText(`D√©couvrez ${restaurantName}, la meilleure pizza italienne √† ${location} ! üçï‚ú®`); }, [restaurantName, location]); const shareUrls = { facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(currentUrl)}&quote=${encodeURIComponent(shareText)}`, twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(currentUrl)}`, instagram: `https://www.instagram.com/`, // Instagram ne supporte pas le partage direct d'URL whatsapp: `https://wa.me/?text=${encodeURIComponent(shareText + ' ' + currentUrl)}`, linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(currentUrl)}` }; const handleShare = (platform: of typeof shareUrls) => { if (platform === 'instagram') { // Pour Instagram, on copie le texte dans le presse-papiers navigator.clipboard.writeText(shareText + ' ' + currentUrl); alert('Texte copi√© dans le presse-papiers ! Collez-le dans votre story Instagram.'); } else { window.open(shareUrls[platform], '_blank', 'width=600,height=400'); } }; return ( <Card> <CardHeader> <CardTitle className="flex items-center space-x-2"> <Share2 className="w-5 h-5" /> <span>Partager sur les r√©seaux sociaux</span> </CardTitle> <CardDescription> Faites d√©couvrir {restaurantName} √† vos amis </CardDescription> </CardHeader> <CardContent> <div className="grid grid-cols-2 md:grid-cols-5 gap-3"> <Button variant="outline" className="flex items-center space-x-2" onClick={() => handleShare('facebook')} > <span className="w-4 h-4 bg-blue-600 rounded-full"></span> <span className="text-sm">Facebook</span> </Button> <Button variant="outline" className="flex items-center space-x-2" onClick={() => handleShare('twitter')} > <span className="w-4 h-4 bg-sky-500 rounded-full"></span> <span className="text-sm">Twitter</span> </Button> <Button variant="outline" className="flex items-center space-x-2" onClick={() => handleShare('instagram')} > <span className="w-4 h-4 bg-gradient-to-br from-purple-600 to-pink-600 rounded-full"></span> <span className="text-sm">Instagram</span> </Button> <Button variant="outline" className="flex items-center space-x-2" onClick={() => handleShare('whatsapp')} > <span className="w-4 h-4 bg-green-500 rounded-full"></span> <span className="text-sm">WhatsApp</span> </Button> <Button variant="outline" className="flex items-center space-x-2" onClick={() => handleShare('linkedin')} > <span className="w-4 h-4 bg-blue-700 rounded-full"></span> <span className="text-sm">LinkedIn</span> </Button> </div> </CardContent> </Card> );
}

// Composant de collecte d'emails pour le marketing
export function EmailCapture() { const [email, setEmail] = useState(""); const [name, setName] = useState(""); const [submitted, setSubmitted] = useState(false); const [loading, setLoading] = useState(false); const handleSubmit = async (e: React.FormEvent) => { e.preventDefault(); setLoading(true); // Simuler l'envoi √† un service de marketing setTimeout(() => { setSubmitted(true); setLoading(false); setEmail(""); setName(""); }, 1500); }; if (submitted) { return ( <Card className="bg-green-50 border-green-200"> <CardContent className="pt-6"> <div className="text-center"> <div className="w-12 h-12 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-4"> <Mail className="w-6 h-6 text-white" /> </div> <h3 className="text-lg font-semibold text-green-800 mb-2"> Merci pour votre inscription ! </h3> <p className="text-green-700"> Vous recevrez bient√¥t nos offres exclusives et actualit√©s. </p> </div> </CardContent> </Card> ); } return ( <Card> <CardHeader> <CardTitle className="flex items-center space-x-2"> <Mail className="w-5 h-5" /> <span>Restez inform√©</span> </CardTitle> <CardDescription> Recevez nos offres exclusives et actualit√©s directement dans votre bo√Æte mail </CardDescription> </CardHeader> <CardContent> <form onSubmit={handleSubmit} className="space-y-4"> <div> <Input type="text" placeholder="Votre nom" value={name} onChange={(e) => setName(e.target.value)} required /> </div> <div> <Input type="email" placeholder="Votre email" value={email} onChange={(e) => setEmail(e.target.value)} required /> </div> <Button type="submit" className="w-full bg-red-600 hover:bg-red-700" disabled={loading} > {loading ? "Inscription..." : "S'inscrire"} </Button> <p className="text-xs text-gray-500 text-center"> En vous inscrivant, vous acceptez de recevoir nos emails. Vous pouvez vous d√©sinscrire √† tout moment. </p> </form> </CardContent> </Card> );
}

// Composant d'avis clients avec notation
export function CustomerReviews() { const [reviews, setReviews] = useState([ { id: 1, name: "Marie L.", rating: 5, comment: "La meilleure pizza de Guingamp ! Le personnel est super accueillant et les ingr√©dients sont frais.", date: "2024-01-15", verified: true }, { id: 2, name: "Thomas B.", rating: 5, comment: "Une vraie pizza italienne comme en Italie. Le four √† bois fait toute la diff√©rence.", date: "2024-01-10", verified: true }, { id: 3, name: "Sophie M.", rating: 4, comment: "Ambiance chaleureuse et pizza d√©licieuse. Nous y retournons chaque semaine en famille !", date: "2024-01-08", verified: true } ]); const [newReview, setNewReview] = useState({ name: "", rating: 5, comment: "" }); const [submitting, setSubmitting] = useState(false); const handleSubmitReview = async (e: React.FormEvent) => { e.preventDefault(); setSubmitting(true); // Simuler l'envoi de l'avis setTimeout(() => { const review = { id: reviews.length + 1, ...newReview, date: new Date().toISOString().split('T')[0], verified: false }; setReviews([review, ...reviews]); setNewReview({ name: "", rating: 5, comment: "" }); setSubmitting(false); }, 1500); }; const averageRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length; return ( <div className="space-y-6"> {/* Statistiques des avis */} <Card> <CardHeader> <CardTitle className="flex items-center space-x-2"> <Star className="w-5 h-5" /> <span>Avis clients</span> </CardTitle> </CardHeader> <CardContent> <div className="grid grid-cols-1 md:grid-cols-3 gap-6"> <div className="text-center"> <div className="text-3xl font-bold text-red-600 mb-1"> {averageRating.toFixed(1)} </div> <div className="flex justify-center mb-2"> {[...Array(5)].map((_, i) => ( <Star ={i} className={`w-4 h-4 ${ i < Math.floor(averageRating) ? 'text-yellow-400 fill-current' : 'text-gray-300' }`} /> ))} </div> <p className="text-sm text-gray-600">Note moyenne</p> </div> <div className="text-center"> <div className="text-3xl font-bold text-red-600 mb-1"> {reviews.length} </div> <p className="text-sm text-gray-600">Avis</p> </div> <div className="text-center"> <div className="text-3xl font-bold text-red-600 mb-1"> {Math.round((reviews.filter(r => r.rating >= 4).length / reviews.length) * 100)}% </div> <p className="text-sm text-gray-600">Satisfaction</p> </div> </div> </CardContent> </Card> {/* Formulaire d'avis */} <Card> <CardHeader> <CardTitle>Laissez un avis</CardTitle> <CardDescription> Partagez votre exp√©rience chez O'Miam </CardDescription> </CardHeader> <CardContent> <form onSubmit={handleSubmitReview} className="space-y-4"> <div> <Input type="text" placeholder="Votre nom" value={newReview.name} onChange={(e) => setNewReview({ ...newReview, name: e.target.value })} required /> </div> <div> <label className="block text-sm font-medium mb-2">Note</label> <div className="flex space-x-1"> {[1, 2, 3, 4, 5].map((rating) => ( <button ={rating} type="button" onClick={() => setNewReview({ ...newReview, rating })} className="focus:outline-none" > <Star className={`w-6 h-6 ${ rating <= newReview.rating ? 'text-yellow-400 fill-current' : 'text-gray-300' } hover:text-yellow-400 transition-colors`} /> </button> ))} </div> </div> <div> <Textarea placeholder="Votre commentaire..." value={newReview.comment} onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })} required rows={3} /> </div> <Button type="submit" className="w-full bg-red-600 hover:bg-red-700" disabled={submitting} > {submitting ? "Envoi..." : "Publier l'avis"} </Button> </form> </CardContent> </Card> {/* Liste des avis */} <div className="space-y-4"> {reviews.map((review) => ( <Card ={review.id}> <CardContent className="pt-6"> <div className="flex items-start justify-between mb-3"> <div> <div className="flex items-center space-x-2"> <h4 className="font-semibold">{review.name}</h4> {review.verified && ( <Badge variant="secondary" className="bg-green-100 text-green-800"> V√©rifi√© </Badge> )} </div> <div className="flex items-center space-x-2 mt-1"> <div className="flex"> {[...Array(5)].map((_, i) => ( <Star ={i} className={`w-4 h-4 ${ i < review.rating ? 'text-yellow-400 fill-current' : 'text-gray-300' }`} /> ))} </div> <span className="text-sm text-gray-500">{review.date}</span> </div> </div> </div> <p className="text-gray-700">{review.comment}</p> </CardContent> </Card> ))} </div> </div> );
}

// Composant de localisation SEO
export function LocalSEO({ restaurantName = "O'Miam", location = "Guingamp" }: MarketingSuiteProps) { const [copied, setCopied] = useState(false); const seoData = { address: "12 Rue des Ponts Saint-Michel, 22200 Guingamp", phone: "+33 2 96 14 61 53", email: "contact@omiam-guingamp.fr", hours: { monday: "Ferm√©", tuesday: "11h30-14h, 18h30-22h", wednesday: "11h30-14h, 18h30-22h", thursday: "11h30-14h, 18h30-22h", friday: "11h30-14h, 18h30-22h", saturday: "11h30-14h30, 18h30-22h30", sunday: "11h30-14h30, 18h30-22h30" }, coordinates: { lat: 48.5638, lng: -3.1486 } }; const handleCopyContact = () => { const contactInfo = `O'Miam Pizzeria
${seoData.address}
${seoData.phone}
${seoData.email}`; navigator.clipboard.writeText(contactInfo); setCopied(true); setTimeout(() => setCopied(false), 2000); }; return ( <div className="space-y-6"> {/* Carte de localisation */} <Card> <CardHeader> <CardTitle className="flex items-center space-x-2"> <MapPin className="w-5 h-5" /> <span>Nous trouver</span> </CardTitle> <CardDescription> {location} - Au c≈ìur de la ville </CardDescription> </CardHeader> <CardContent> <div className="space-y-4"> <div className="bg-gray-200 rounded-lg h-64 flex items-center justify-center"> <div className="text-center"> <MapPin className="w-12 h-12 text-gray-400 mx-auto mb-2" /> <p className="text-gray-600">Carte interactive</p> <p className="text-sm text-gray-500">12 Rue des Ponts Saint-Michel, 22200 Guingamp</p> </div> </div> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> <div className="space-y-2"> <div className="flex items-center space-x-2"> <MapPin className="w-4 h-4 text-red-600" /> <span className="text-sm">{seoData.address}</span> </div> <div className="flex items-center space-x-2"> <Phone className="w-4 h-4 text-red-600" /> <span className="text-sm">{seoData.phone}</span> </div> <div className="flex items-center space-x-2"> <Mail className="w-4 h-4 text-red-600" /> <span className="text-sm">{seoData.email}</span> </div> </div> <Button variant="outline" onClick={handleCopyContact} className="w-full" > {copied ? "Copi√© !" : "Copier les coordonn√©es"} </Button> </div> </div> </CardContent> </Card> {/* Horaires d'ouverture */} <Card> <CardHeader> <CardTitle className="flex items-center space-x-2"> <Calendar className="w-5 h-5" /> <span>Horaires d'ouverture</span> </CardTitle> </CardHeader> <CardContent> <div className="space-y-2"> {Object.entries(seoData.hours).map(([day, hours]) => ( <div ={day} className="flex justify-between items-center py-2 border-b border-gray-100 last:border-0"> <span className="font-medium capitalize"> {day === 'monday' ? 'Lundi' : day === 'tuesday' ? 'Mardi' : day === 'wednesday' ? 'Mercredi' : day === 'thursday' ? 'Jeudi' : day === 'friday' ? 'Vendredi' : day === 'saturday' ? 'Samedi' : 'Dimanche'} </span> <span className={`${ hours === 'Ferm√©' ? 'text-red-600 font-medium' : 'text-gray-700' }`}> {hours} </span> </div> ))} </div> </CardContent> </Card> </div> );
}

// Composant principal de la suite marketing
export default function MarketingSuite(props: MarketingSuiteProps) { return ( <div className="space-y-8"> <SocialShare {...props} /> <EmailCapture /> <CustomerReviews /> <LocalSEO {...props} /> </div> );
}