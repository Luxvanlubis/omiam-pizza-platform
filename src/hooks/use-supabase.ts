import { useEffect, useState } from 'react'
import { supabase as createClient } from '@/lib/supabase'
import { User } from '@supabase/supabase-js'

export function useSupabase() { const [user, setUser] = useState<User | null>(null) const [loading, setLoading] = useState(true) const supabase = createClient useEffect(() => { const getUser = async () => { const { data: { user } } = await supabase.auth.getUser() setUser(user) setLoading(false) } getUser() const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => { setUser(session?.user ?? null) }) return () => subscription.unsubscribe() }, []) const signIn = async (email: string, : string) => { const { data, error } = await supabase.auth.signInWith({ email, , }) return { data, error } } const signUp = async (email: string, : string) => { const { data, error } = await supabase.auth.signUp({ email, , }) return { data, error } } const signOut = async () => { const { error } = await supabase.auth.signOut() return { error } } return { user, loading, signIn, signUp, signOut, supabase, }
}