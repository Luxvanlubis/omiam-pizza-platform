/**
 * Script de nettoyage du localStorage pour r√©soudre les erreurs JSON
 * Supprime toutes les donn√©es localStorage potentiellement corrompues
 */

const KEYS_TO_CLEAR = [
  // Cl√©s OMIAM sp√©cifiques
  'omiam-cookie-consent',
  'omiam-cookie-preferences',
  'omiam_last_sync',
  'omiam_offline_actions',
  
  // Cl√©s de cache
  'cart-items',
  'user-preferences',
  'menu-cache',
  'offline-menu',
  'notifications',
  'push-subscription',
  
  // Cl√©s g√©n√©riques qui pourraient √™tre corrompues
  'i18n-lang',
  'theme-preference',
  'gdpr-consent'
];

function clearCorruptedLocalStorage() {
  console.log('üßπ Nettoyage du localStorage...');
  
  let clearedCount = 0;
  let errorCount = 0;
  
  // Nettoyer les cl√©s sp√©cifiques
  KEYS_TO_CLEAR.forEach(key => {
    try {
      const value = localStorage.getItem(key);
      if (value) {
        // Tenter de parser pour d√©tecter la corruption
        try {
          JSON.parse(value);
          console.log(`‚úÖ ${key}: JSON valide`);
        } catch (parseError) {
          console.log(`‚ùå ${key}: JSON corrompu - suppression`);
          localStorage.removeItem(key);
          clearedCount++;
        }
      }
    } catch (error) {
      console.error(`‚ùå Erreur lors du nettoyage de ${key}:`, error.message);
      errorCount++;
    }
  });
  
  // Nettoyer les cl√©s avec pr√©fixes OMIAM
  const allKeys = Object.keys(localStorage);
  allKeys.forEach(key => {
    if (key.startsWith('omiam_cache_') || key.startsWith('omiam-') || key.startsWith('OMIAM_')) {
      try {
        const value = localStorage.getItem(key);
        if (value) {
          try {
            JSON.parse(value);
            console.log(`‚úÖ ${key}: JSON valide`);
          } catch (parseError) {
            console.log(`‚ùå ${key}: JSON corrompu - suppression`);
            localStorage.removeItem(key);
            clearedCount++;
          }
        }
      } catch (error) {
        console.error(`‚ùå Erreur lors du nettoyage de ${key}:`, error.message);
        errorCount++;
      }
    }
  });
  
  console.log(`\nüìä R√©sum√© du nettoyage:`);
  console.log(`   - √âl√©ments supprim√©s: ${clearedCount}`);
  console.log(`   - Erreurs rencontr√©es: ${errorCount}`);
  console.log(`   - √âl√©ments restants: ${Object.keys(localStorage).length}`);
  
  if (clearedCount > 0) {
    console.log('\nüîÑ Red√©marrez l\'application pour appliquer les changements.');
  } else {
    console.log('\n‚ú® Aucune donn√©e corrompue d√©tect√©e.');
  }
}

// Ex√©cuter le nettoyage
if (typeof window !== 'undefined' && window.localStorage) {
  clearCorruptedLocalStorage();
} else {
  console.log('‚ùå localStorage non disponible');
}

// Export pour utilisation dans d'autres scripts
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { clearCorruptedLocalStorage };
}